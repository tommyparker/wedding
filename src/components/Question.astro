---
interface Props {
    question: string;
    answer: string;
}

const { question, answer } = Astro.props;
---

<div class="question">
    <button class="question-header" aria-expanded="false">
        <h3 class="mb-0">{question}</h3>
        <svg 
        viewBox="0 0 59.14 59.14"
        fill="currentColor"
        class="question-icon"
        width="20px">
        >
        <g>
        <path d="M38.27,20.68h17.39c1.93,0,3.48,1.55,3.48,3.29v10.82c0,1.93-1.55,3.48-3.48,3.48h-17.39v17.39c0,1.93-1.55,3.48-3.48,3.48h-10.82c-1.93,0-3.29-1.55-3.29-3.48v-17.39H3.48c-1.93,0-3.48-1.55-3.48-3.48v-10.82c0-1.93,1.55-3.29,3.48-3.29h17.2V3.48c0-1.93,1.55-3.48,3.29-3.48h10.82c1.93,0,3.48,1.55,3.48,3.48v17.2Z"/>
        </g>
        </svg>
    </button>
    <div class="question-content" hidden>
        <div class="question-body">
            {answer}
        </div>
    </div>
</div>

<script>
    document.querySelectorAll('.question-header').forEach(button => {
        button.addEventListener('click', () => {
            const expanded = button.getAttribute('aria-expanded') === 'true';
            button.setAttribute('aria-expanded', String(!expanded));
        });
    });
</script> 